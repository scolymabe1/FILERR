document.addEventListener("DOMContentLoaded", () => {
    const dropArea = document.getElementById('get-file');  // –ø–æ–º–µ–Ω—è–ª id
    const img = dropArea.querySelector('img');
    const h2 = dropArea.querySelector('h2');
    const fileInput = document.getElementById('fileInput');
    const fileLink = document.getElementById('file-link'); // –±–ª–æ–∫ –ø–æ–¥ —Å—Å—ã–ª–∫—É

    const allowedTypes = ['image/jpeg', 'image/png', 'application/pdf'];
    const MAX_SIZE_MB = 10;
    const MAX_SIZE = MAX_SIZE_MB * 1024 * 1024;

    // –ö–ª–∏–∫ –ø–æ –±–ª–æ–∫—É –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
    dropArea.addEventListener('click', () => fileInput.click());

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ —á–µ—Ä–µ–∑ input
    fileInput.addEventListener('change', () => {
        const file = fileInput.files?.[0];
        handleFile(file);
    });

    // Drag and drop ‚Äî –ø–æ–¥—Å–≤–µ—Ç–∫–∞ –æ–±–ª–∞—Å—Ç–∏
    ['dragenter', 'dragover'].forEach(eventName => {
        dropArea.addEventListener(eventName, e => {
            e.preventDefault();
            dropArea.classList.add('dragover');
        });
    });

    ['dragleave', 'drop'].forEach(eventName => {
        dropArea.addEventListener(eventName, e => {
            e.preventDefault();
            dropArea.classList.remove('dragover');
        });
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ
    dropArea.addEventListener('drop', e => {
        const file = e.dataTransfer.files?.[0];
        handleFile(file);
    });

    // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
    function handleFile(file) {
        if (!file) return;

        if (!allowedTypes.includes(file.type)) {
            h2.textContent = '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞';
            fileInput.value = '';
            return;
        }

        if (file.size > MAX_SIZE) {
            h2.textContent = `‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π —Ñ–∞–π–ª (–º–∞–∫—Å–∏–º—É–º ${MAX_SIZE_MB} –ú–ë)`;
            fileInput.value = '';
            return;
        }

        h2.textContent = '–ó–∞–≥—Ä—É–∑–∫–∞: ' + file.name;
        if (img) img.src = 'img/new-image.gif';
        fileLink.textContent = '';

        const formData = new FormData();
        formData.append('file', file);

        fetch('/upload', {
            method: 'POST',
            body: formData
        })
        .then(async res => {
            if (!res.ok) throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
            const data = await res.json();

            if (data.url) {
                h2.textContent = '‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω!';
                fileLink.innerHTML = `üîó <a href="${data.url}" target="_blank" rel="noopener noreferrer">–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª</a>`;
            } else {
                throw new Error('–°–µ—Ä–≤–µ—Ä –Ω–µ –≤–µ—Ä–Ω—É–ª —Å—Å—ã–ª–∫—É');
            }
        })
        .catch(err => {
            h2.textContent = '‚ùå –û—à–∏–±–∫–∞: ' + err.message;
        });
    }
});
